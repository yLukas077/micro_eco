name: Run Backend Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: appuser
          POSTGRES_PASSWORD: apppassword
          POSTGRES_DB: raylabs_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U appuser -d raylabs_test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      rabbitmq:
        image: rabbitmq:3-management
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      NODE_ENV: test
      DB_HOST: localhost
      DB_PORT: 5432
      DB_USERNAME: appuser
      DB_PASSWORD: apppassword
      DB_NAME: raylabs_test
      RABBITMQ_URL: amqp://guest:guest@localhost:5672
      JWT_SECRET: supersecret

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Wait for Postgres to be ready
        run: |
          for i in {1..20}; do
            if pg_isready -h localhost -p 5432 -U appuser; then
              break
            fi
            echo "Waiting for Postgres..."
            sleep 3
          done

      - name: Run migrations
        run: npm run migration:run

      - name: Run tests
        run: npm test
